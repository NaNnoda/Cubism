{
  "version": 3,
  "sources": ["src/datatypes/point.ts", "src/ui/State.ts", "src/ui/CanvasDrawer.ts", "src/ui/elements/CubismElement.ts", "src/ui/Cubism.ts", "src/ui/elements/RectangleElement.ts", "src/ui/elements/layouts/LayoutElement.ts", "src/index.ts"],
  "sourcesContent": ["/**\r\n * A representation of a point in 2D space.\r\n */\r\nexport class Point2D {\r\n    arr: number[]\r\n    constructor(x: number, y: number) {\r\n        this.arr = [x, y];\r\n    }\r\n    get x() {\r\n        return this.arr[0];\r\n    }\r\n    set x(value: number) {\r\n        this.arr[0] = value;\r\n    }\r\n    get y() {\r\n        return this.arr[1];\r\n    }\r\n    set y(value: number) {\r\n        this.arr[1] = value;\r\n    }\r\n\r\n    sub(other: Point2D): Point2D {\r\n        return new Point2D(this.x - other.x, this.y - other.y);\r\n    }\r\n    add(other: Point2D): Point2D {\r\n        return new Point2D(this.x + other.x, this.y + other.y);\r\n    }\r\n    mul(other: Point2D): Point2D {\r\n        return new Point2D(this.x * other.x, this.y * other.y);\r\n    }\r\n    scale(n: number): Point2D {\r\n        return new Point2D(this.x * n, this.y * n);\r\n    }\r\n}\r\n", "import {Point2D} from \"../datatypes/point\";\r\n\r\nexport class CubismState {\r\n    private lineWidths: number[] = [10];\r\n\r\n    set lineWidth(lineWidth: number) {\r\n        this.lineWidths.push(lineWidth);\r\n    }\r\n\r\n    get lineWidth() {\r\n        return this.lineWidths[this.lineWidths.length - 1];\r\n    }\r\n\r\n    popLineWidth() {\r\n        if (this.lineWidths.length > 1) {\r\n            this.lineWidths.pop();\r\n        }\r\n        return this.lineWidth;\r\n    }\r\n\r\n    private fillStyles: string[] = [\"gray\"];\r\n\r\n    set fillStyle(style: string) {\r\n        this.fillStyles.push(style);\r\n    }\r\n\r\n    get fillStyle() {\r\n        return this.fillStyles[this.fillStyles.length - 1];\r\n    }\r\n\r\n    popFillStyle() {\r\n        if (this.fillStyles.length > 1) {\r\n            this.fillStyles.pop();\r\n        }\r\n        return this.fillStyle;\r\n    }\r\n\r\n\r\n    private strokeStyles: string[] = [\"black\"];\r\n\r\n    set strokeStyle(style: string) {\r\n        this.strokeStyles.push(style);\r\n    }\r\n\r\n    get strokeStyle() {\r\n        return this.strokeStyles[this.strokeStyles.length - 1];\r\n    }\r\n\r\n    popStrokeStyle() {\r\n        if (this.strokeStyles.length > 1) {\r\n            this.strokeStyles.pop();\r\n        }\r\n        return this.strokeStyle;\r\n    }\r\n\r\n    private translates: Point2D[] = [new Point2D(0, 0)];\r\n\r\n    set translate(offset: Point2D) {\r\n        console.log(\"set translate\", offset.x, offset.y);\r\n        this.translates.push(offset);\r\n        console.log(\"Current translates\", this.translates);\r\n        console.log(\"Size\", this.translates.length);\r\n    }\r\n\r\n    get translate() {\r\n        return this.translates[this.translates.length - 1];\r\n    }\r\n\r\n    popTranslate() {\r\n        if (this.translates.length > 1) {\r\n            this.translates.pop();\r\n        }\r\n        return this.translate;\r\n    }\r\n}\r\n", "import {Point2D} from \"../datatypes/point\";\r\nimport {CubismState} from \"./State\";\r\n\r\nexport class CanvasDrawer {\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n\r\n    state: CubismState;\r\n\r\n    constructor(canvas: HTMLCanvasElement) {\r\n        this.state = new CubismState();\r\n        this.canvas = canvas;\r\n        this.ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n    }\r\n\r\n    clear() {\r\n        this.canvas.width = this.canvas.width;\r\n    }\r\n\r\n    setFillStyle(color: string) {\r\n        this.ctx.fillStyle = color;\r\n        this.state.fillStyle = color;\r\n    }\r\n\r\n    restoreFillStyle() {\r\n        this.ctx.fillStyle = this.state.popFillStyle();\r\n    }\r\n\r\n    translate(offset: Point2D) {\r\n        console.log(\"translate\", offset);\r\n        this.state.translate = offset;\r\n        this.ctx.translate(offset.x, offset.y);\r\n    }\r\n\r\n    restoreTranslate() {\r\n        let lastTranslate = this.state.popTranslate();\r\n        console.log(\"restoreTranslate\", lastTranslate.x, lastTranslate.y);\r\n        this.ctx.translate(-lastTranslate.x, -lastTranslate.y);\r\n    }\r\n\r\n    drawText(text: string, x: number, y: number) {\r\n        this.ctx.fillText(text, x, y);\r\n    }\r\n\r\n    setStrokeStyle(color: string) {\r\n        this.ctx.strokeStyle = color;\r\n        this.state.strokeStyle = color;\r\n    }\r\n\r\n    restoreStrokeStyle() {\r\n        this.ctx.strokeStyle = this.state.popStrokeStyle();\r\n    }\r\n\r\n    setStrokeWidth(width: number) {\r\n        this.ctx.lineWidth = width;\r\n        this.state.lineWidth = width;\r\n    }\r\n\r\n    restoreStrokeWidth() {\r\n        this.ctx.lineWidth = this.state.popLineWidth();\r\n    }\r\n\r\n    drawLineWithPoints(begin: Point2D, end: Point2D) {\r\n        this.drawLine(begin.x, begin.y, end.x, end.y);\r\n    }\r\n\r\n    drawLine(beginX: number, beginY: number, endX: number, endY: number) {\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(beginX, beginY);\r\n        this.ctx.lineTo(endX, endY);\r\n        this.closeDraw();\r\n    }\r\n\r\n    drawCircle(x: number, y: number, radius: number) {\r\n        this.ctx.beginPath();\r\n        this.ctx.lineWidth = this.state.lineWidth;\r\n        this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\r\n        this.closeDraw();\r\n    }\r\n\r\n    drawShape(points: Point2D[]) {\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(points[0].x, points[0].y);\r\n        for (let i = 1; i < points.length; i++) {\r\n            this.ctx.lineTo(points[i].x, points[i].y);\r\n        }\r\n        this.closeDraw();\r\n    }\r\n\r\n    drawRect(x: number, y: number, width: number, height: number) {\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(x, y);\r\n        this.ctx.lineTo(width, y);\r\n        this.ctx.lineTo(width, height);\r\n        this.ctx.lineTo(x, height);\r\n        this.closeDraw();\r\n    }\r\n\r\n    drawPathString(path: string) {\r\n        this.drawPath(new Path2D(path));\r\n    }\r\n\r\n    drawPath(path: Path2D) {\r\n        this.ctx.stroke(path);\r\n    }\r\n\r\n    closeDraw() {\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.ctx.stroke();\r\n    }\r\n}\r\n", "import {Point2D} from \"../../datatypes/point\";\r\nimport {CanvasDrawer} from \"../CanvasDrawer\";\r\n\r\nexport class CubismElement implements IRenderable {\r\n    position: Point2D;\r\n    size: Point2D;\r\n    c: CanvasDrawer | null;\r\n\r\n    constructor() {\r\n        this.position = new Point2D(0, 0);\r\n        this.size = new Point2D(0, 0);\r\n        this.c = null;\r\n    }\r\n\r\n    setCanvasDrawer(c: CanvasDrawer) {\r\n        this.c = c;\r\n    }\r\n\r\n    setWidth(width: number) {\r\n        this.size.x = width;\r\n        return this;\r\n    }\r\n\r\n    setHeight(height: number) {\r\n        this.size.y = height;\r\n        return this;\r\n    }\r\n\r\n    setPosFromPoint(pos: Point2D) {\r\n        this.position = pos;\r\n        return this;\r\n    }\r\n    setPosFromXY(x: number, y: number) {\r\n        this.position.x = x;\r\n        this.position.y = y;\r\n        return this;\r\n    }\r\n\r\n    render(): void {\r\n        if (this.c === null) {\r\n            throw new Error(\"CubismElement.render(): CubismCanvasManager is null\");\r\n        }\r\n    }\r\n}\r\n", "import {CanvasDrawer} from \"./CanvasDrawer\";\r\nimport {CubismElement} from \"./elements/CubismElement\";\r\n\r\nexport class CubismCanvasManager extends CanvasDrawer implements IUpdatable {\r\n    root: CubismElement;\r\n\r\n    constructor(canvas: HTMLCanvasElement) {\r\n        super(canvas);\r\n        this.root = new CubismElement();\r\n    }\r\n\r\n    static createFromCanvas(canvas: HTMLCanvasElement) {\r\n        return new CubismCanvasManager(canvas);\r\n    }\r\n\r\n    static createFromId(id: string) {\r\n        return CubismCanvasManager.createFromCanvas(document.getElementById(id) as HTMLCanvasElement);\r\n    }\r\n\r\n    init(root: CubismElement) {\r\n        this.clear();\r\n        this.setRootElement(root);\r\n        this.setElementCanvas();\r\n        this.update();\r\n    }\r\n\r\n    setElementCanvas() {\r\n        this.root.setCanvasDrawer(this);\r\n    }\r\n\r\n    setRootElement(root: CubismElement) {\r\n        this.root = root;\r\n    }\r\n\r\n    update() {\r\n        if (this.root) {\r\n            this.root.render();\r\n        }\r\n    }\r\n}\r\n\r\n", "import {Point2D} from \"../../datatypes/point\";\r\nimport {CubismElement} from \"./CubismElement\";\r\nimport {CanvasDrawer} from \"../CanvasDrawer\";\r\n\r\nexport class RectangleElement extends CubismElement {\r\n    background: string;\r\n    lineWidth: number;\r\n\r\n    constructor() {\r\n        super();\r\n        this.background = \"white\";\r\n        this.lineWidth = 10;\r\n    }\r\n\r\n    setLineWidth(width: number) {\r\n        this.lineWidth = width;\r\n        return this;\r\n    }\r\n\r\n    setBackgroundColor(color: string) {\r\n        this.background = color;\r\n        return this;\r\n    }\r\n\r\n    render(): void {\r\n        super.render();\r\n        let c = this.c as CanvasDrawer;\r\n        c.setFillStyle(this.background);\r\n        c.setStrokeStyle(\"black\");\r\n        c.setStrokeWidth(this.lineWidth);\r\n        c.translate(this.position);\r\n        c.drawRect(0, 0, this.size.x, this.size.y);\r\n        c.restoreTranslate();\r\n        c.restoreFillStyle();\r\n    }\r\n}\r\n", "import {CubismElement} from \"../CubismElement\";\r\nimport {CanvasDrawer} from \"../../CanvasDrawer\";\r\n\r\nexport class LayoutElement extends CubismElement {\r\n    children: CubismElement[] = [];\r\n\r\n    constructor(...children: CubismElement[]) {\r\n        super();\r\n        this.children = children;\r\n    }\r\n\r\n    render() {\r\n        super.render();\r\n        for (let child of this.children) {\r\n            child.render();\r\n        }\r\n    }\r\n    setCanvasDrawer(c: CanvasDrawer) {\r\n        super.setCanvasDrawer(c);\r\n        for (let child of this.children) {\r\n            child.setCanvasDrawer(c);\r\n        }\r\n    }\r\n}\r\n", "import {CubismCanvasManager} from \"./ui/Cubism\";\r\nimport {RectangleElement} from \"./ui/elements/RectangleElement\";\r\nimport {LayoutElement} from \"./ui/elements/layouts/LayoutElement\";\r\n\r\nconsole.log(\"loading index.ts\");\r\n\r\n\r\n/**\r\n * entry point\r\n */\r\nfunction main() {\r\n    let c = CubismCanvasManager.createFromId(\"mainCanvas\");\r\n    c.init(\r\n        new LayoutElement(\r\n            new RectangleElement()\r\n                .setWidth(100)\r\n                .setHeight(100)\r\n                .setBackgroundColor(\"red\")\r\n                .setPosFromXY(0, 0),\r\n            new RectangleElement()\r\n                .setWidth(100)\r\n                .setHeight(100)\r\n                .setBackgroundColor(\"blue\")\r\n                .setPosFromXY(40, 40)\r\n                .setLineWidth(5),\r\n            new RectangleElement()\r\n                .setWidth(100)\r\n                .setHeight(100)\r\n                .setBackgroundColor(\"green\")\r\n                .setPosFromXY(40, 40),\r\n        )\r\n    )\r\n}\r\n\r\n/**\r\n * Initialize the game\r\n */\r\nexport function init() {\r\n    console.log(\"init\");\r\n    // initConsole();\r\n    // initCanvas();\r\n    // initWindows();\r\n}\r\n\r\n//\r\n// function initCanvas() {\r\n//     // canvas.width = window.innerWidth;\r\n//     // canvas.height = window.innerHeight;\r\n//\r\n//     canvas.addEventListener(\"pointermove\", onMove, false);\r\n//     canvas.addEventListener(\"pointerdown\", onDown, false);\r\n//     canvas.addEventListener(\"pointerup\", onUp, false);\r\n//     // return ctx;\r\n// }\r\n//\r\n// function initWindows() {\r\n//     rootWindow.addWindows\r\n//     (\r\n//         newWindow(500, 200)\r\n//             .setTitle(\"Sub Window 1\")\r\n//             .setOffsetNum(50, 50)\r\n//             .addWindows(\r\n//                 new WindowScene(100, 100)\r\n//                     .setTitle(\"Sub Window 2\")\r\n//                     .setOffsetNum(50, 50)\r\n//             ),\r\n//         newWindow(100, 200)\r\n//             .setTitle(\"Sub Window 3\")\r\n//             .setOffsetX(600)\r\n//     )\r\n// }\r\n//\r\n\r\nmain()\r\n"],
  "mappings": "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",
  "names": []
}
